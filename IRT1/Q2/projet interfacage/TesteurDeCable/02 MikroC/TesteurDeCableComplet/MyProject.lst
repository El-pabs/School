;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 16-05-23 20:16:03
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x295B      	GOTO       347
_BoucleInfinie:
;MyProject.c,23 :: 		void BoucleInfinie (){
;MyProject.c,24 :: 		delay_ms(500);
0x0003	0x3003      	MOVLW      3
0x0004	0x1283      	BCF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x00FB      	MOVWF      R11
0x0007	0x308A      	MOVLW      138
0x0008	0x00FC      	MOVWF      R12
0x0009	0x3055      	MOVLW      85
0x000A	0x00FD      	MOVWF      R13
L_BoucleInfinie5:
0x000B	0x0BFD      	DECFSZ     R13, 1
0x000C	0x280B      	GOTO       L_BoucleInfinie5
0x000D	0x0BFC      	DECFSZ     R12, 1
0x000E	0x280B      	GOTO       L_BoucleInfinie5
0x000F	0x0BFB      	DECFSZ     R11, 1
0x0010	0x280B      	GOTO       L_BoucleInfinie5
0x0011	0x0000      	NOP
0x0012	0x0000      	NOP
;MyProject.c,25 :: 		if(mode == 1) {
0x0013	0x3000      	MOVLW      0
0x0014	0x0623      	XORWF      _mode+1, 0
0x0015	0x1D03      	BTFSS      STATUS, 2
0x0016	0x2819      	GOTO       L__BoucleInfinie43
0x0017	0x3001      	MOVLW      1
0x0018	0x0622      	XORWF      _mode, 0
L__BoucleInfinie43:
0x0019	0x1D03      	BTFSS      STATUS, 2
0x001A	0x2871      	GOTO       L_BoucleInfinie6
;MyProject.c,26 :: 		compteur = compteur*2;
0x001B	0x0824      	MOVF       _compteur, 0
0x001C	0x00F0      	MOVWF      R0
0x001D	0x0825      	MOVF       _compteur+1, 0
0x001E	0x00F1      	MOVWF      R0+1
0x001F	0x0DF0      	RLF        R0, 1
0x0020	0x0DF1      	RLF        R0+1, 1
0x0021	0x1070      	BCF        R0, 0
0x0022	0x0870      	MOVF       R0, 0
0x0023	0x00A4      	MOVWF      _compteur
0x0024	0x0871      	MOVF       R0+1, 0
0x0025	0x00A5      	MOVWF      _compteur+1
;MyProject.c,27 :: 		PORTB = compteur;
0x0026	0x0870      	MOVF       R0, 0
0x0027	0x0086      	MOVWF      PORTB
;MyProject.c,28 :: 		RA0_bit = 0;
0x0028	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;MyProject.c,29 :: 		delay_ms(250);
0x0029	0x3002      	MOVLW      2
0x002A	0x00FB      	MOVWF      R11
0x002B	0x3045      	MOVLW      69
0x002C	0x00FC      	MOVWF      R12
0x002D	0x30A9      	MOVLW      169
0x002E	0x00FD      	MOVWF      R13
L_BoucleInfinie7:
0x002F	0x0BFD      	DECFSZ     R13, 1
0x0030	0x282F      	GOTO       L_BoucleInfinie7
0x0031	0x0BFC      	DECFSZ     R12, 1
0x0032	0x282F      	GOTO       L_BoucleInfinie7
0x0033	0x0BFB      	DECFSZ     R11, 1
0x0034	0x282F      	GOTO       L_BoucleInfinie7
0x0035	0x0000      	NOP
0x0036	0x0000      	NOP
;MyProject.c,30 :: 		if(compteur == 256) {
0x0037	0x0825      	MOVF       _compteur+1, 0
0x0038	0x3A01      	XORLW      1
0x0039	0x1D03      	BTFSS      STATUS, 2
0x003A	0x283D      	GOTO       L__BoucleInfinie44
0x003B	0x3000      	MOVLW      0
0x003C	0x0624      	XORWF      _compteur, 0
L__BoucleInfinie44:
0x003D	0x1D03      	BTFSS      STATUS, 2
0x003E	0x2852      	GOTO       L_BoucleInfinie8
;MyProject.c,31 :: 		compteur =1;
0x003F	0x3001      	MOVLW      1
0x0040	0x00A4      	MOVWF      _compteur
0x0041	0x3000      	MOVLW      0
0x0042	0x00A5      	MOVWF      _compteur+1
;MyProject.c,32 :: 		RA0_bit = 1;
0x0043	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
;MyProject.c,33 :: 		delay_ms(250);
0x0044	0x3002      	MOVLW      2
0x0045	0x00FB      	MOVWF      R11
0x0046	0x3045      	MOVLW      69
0x0047	0x00FC      	MOVWF      R12
0x0048	0x30A9      	MOVLW      169
0x0049	0x00FD      	MOVWF      R13
L_BoucleInfinie9:
0x004A	0x0BFD      	DECFSZ     R13, 1
0x004B	0x284A      	GOTO       L_BoucleInfinie9
0x004C	0x0BFC      	DECFSZ     R12, 1
0x004D	0x284A      	GOTO       L_BoucleInfinie9
0x004E	0x0BFB      	DECFSZ     R11, 1
0x004F	0x284A      	GOTO       L_BoucleInfinie9
0x0050	0x0000      	NOP
0x0051	0x0000      	NOP
;MyProject.c,34 :: 		}
L_BoucleInfinie8:
;MyProject.c,35 :: 		if(compteur == 0) {
0x0052	0x3000      	MOVLW      0
0x0053	0x0625      	XORWF      _compteur+1, 0
0x0054	0x1D03      	BTFSS      STATUS, 2
0x0055	0x2858      	GOTO       L__BoucleInfinie45
0x0056	0x3000      	MOVLW      0
0x0057	0x0624      	XORWF      _compteur, 0
L__BoucleInfinie45:
0x0058	0x1D03      	BTFSS      STATUS, 2
0x0059	0x286D      	GOTO       L_BoucleInfinie10
;MyProject.c,36 :: 		RA0_bit = 1;
0x005A	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
;MyProject.c,37 :: 		compteur =1;
0x005B	0x3001      	MOVLW      1
0x005C	0x00A4      	MOVWF      _compteur
0x005D	0x3000      	MOVLW      0
0x005E	0x00A5      	MOVWF      _compteur+1
;MyProject.c,38 :: 		delay_ms(250);
0x005F	0x3002      	MOVLW      2
0x0060	0x00FB      	MOVWF      R11
0x0061	0x3045      	MOVLW      69
0x0062	0x00FC      	MOVWF      R12
0x0063	0x30A9      	MOVLW      169
0x0064	0x00FD      	MOVWF      R13
L_BoucleInfinie11:
0x0065	0x0BFD      	DECFSZ     R13, 1
0x0066	0x2865      	GOTO       L_BoucleInfinie11
0x0067	0x0BFC      	DECFSZ     R12, 1
0x0068	0x2865      	GOTO       L_BoucleInfinie11
0x0069	0x0BFB      	DECFSZ     R11, 1
0x006A	0x2865      	GOTO       L_BoucleInfinie11
0x006B	0x0000      	NOP
0x006C	0x0000      	NOP
;MyProject.c,39 :: 		}
L_BoucleInfinie10:
;MyProject.c,40 :: 		if (RB0_bit == 0){
0x006D	0x1806      	BTFSC      RB0_bit, BitPos(RB0_bit+0)
0x006E	0x2871      	GOTO       L_BoucleInfinie12
;MyProject.c,41 :: 		mode = 0;
0x006F	0x01A2      	CLRF       _mode
0x0070	0x01A3      	CLRF       _mode+1
;MyProject.c,42 :: 		}
L_BoucleInfinie12:
;MyProject.c,43 :: 		}
L_BoucleInfinie6:
;MyProject.c,44 :: 		}
L_end_BoucleInfinie:
0x0071	0x0008      	RETURN
; end of _BoucleInfinie
_boutonpasparpas:
;MyProject.c,4 :: 		void boutonpasparpas () {
;MyProject.c,5 :: 		compteur = compteur*2;
0x0072	0x1283      	BCF        STATUS, 5
0x0073	0x1303      	BCF        STATUS, 6
0x0074	0x0824      	MOVF       _compteur, 0
0x0075	0x00F0      	MOVWF      R0
0x0076	0x0825      	MOVF       _compteur+1, 0
0x0077	0x00F1      	MOVWF      R0+1
0x0078	0x0DF0      	RLF        R0, 1
0x0079	0x0DF1      	RLF        R0+1, 1
0x007A	0x1070      	BCF        R0, 0
0x007B	0x0870      	MOVF       R0, 0
0x007C	0x00A4      	MOVWF      _compteur
0x007D	0x0871      	MOVF       R0+1, 0
0x007E	0x00A5      	MOVWF      _compteur+1
;MyProject.c,6 :: 		PORTB = compteur;
0x007F	0x0870      	MOVF       R0, 0
0x0080	0x0086      	MOVWF      PORTB
;MyProject.c,8 :: 		RA0_bit = 0;
0x0081	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;MyProject.c,9 :: 		delay_ms(500);
0x0082	0x3003      	MOVLW      3
0x0083	0x00FB      	MOVWF      R11
0x0084	0x308A      	MOVLW      138
0x0085	0x00FC      	MOVWF      R12
0x0086	0x3055      	MOVLW      85
0x0087	0x00FD      	MOVWF      R13
L_boutonpasparpas0:
0x0088	0x0BFD      	DECFSZ     R13, 1
0x0089	0x2888      	GOTO       L_boutonpasparpas0
0x008A	0x0BFC      	DECFSZ     R12, 1
0x008B	0x2888      	GOTO       L_boutonpasparpas0
0x008C	0x0BFB      	DECFSZ     R11, 1
0x008D	0x2888      	GOTO       L_boutonpasparpas0
0x008E	0x0000      	NOP
0x008F	0x0000      	NOP
;MyProject.c,10 :: 		if(compteur == 256) {
0x0090	0x0825      	MOVF       _compteur+1, 0
0x0091	0x3A01      	XORLW      1
0x0092	0x1D03      	BTFSS      STATUS, 2
0x0093	0x2896      	GOTO       L__boutonpasparpas40
0x0094	0x3000      	MOVLW      0
0x0095	0x0624      	XORWF      _compteur, 0
L__boutonpasparpas40:
0x0096	0x1D03      	BTFSS      STATUS, 2
0x0097	0x28AB      	GOTO       L_boutonpasparpas1
;MyProject.c,11 :: 		compteur = 1;
0x0098	0x3001      	MOVLW      1
0x0099	0x00A4      	MOVWF      _compteur
0x009A	0x3000      	MOVLW      0
0x009B	0x00A5      	MOVWF      _compteur+1
;MyProject.c,12 :: 		RA0_bit = 1;
0x009C	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
;MyProject.c,13 :: 		delay_ms(1000);
0x009D	0x3006      	MOVLW      6
0x009E	0x00FB      	MOVWF      R11
0x009F	0x3013      	MOVLW      19
0x00A0	0x00FC      	MOVWF      R12
0x00A1	0x30AD      	MOVLW      173
0x00A2	0x00FD      	MOVWF      R13
L_boutonpasparpas2:
0x00A3	0x0BFD      	DECFSZ     R13, 1
0x00A4	0x28A3      	GOTO       L_boutonpasparpas2
0x00A5	0x0BFC      	DECFSZ     R12, 1
0x00A6	0x28A3      	GOTO       L_boutonpasparpas2
0x00A7	0x0BFB      	DECFSZ     R11, 1
0x00A8	0x28A3      	GOTO       L_boutonpasparpas2
0x00A9	0x0000      	NOP
0x00AA	0x0000      	NOP
;MyProject.c,14 :: 		}
L_boutonpasparpas1:
;MyProject.c,15 :: 		if(compteur == 0) {
0x00AB	0x3000      	MOVLW      0
0x00AC	0x0625      	XORWF      _compteur+1, 0
0x00AD	0x1D03      	BTFSS      STATUS, 2
0x00AE	0x28B1      	GOTO       L__boutonpasparpas41
0x00AF	0x3000      	MOVLW      0
0x00B0	0x0624      	XORWF      _compteur, 0
L__boutonpasparpas41:
0x00B1	0x1D03      	BTFSS      STATUS, 2
0x00B2	0x28C6      	GOTO       L_boutonpasparpas3
;MyProject.c,16 :: 		RA0_bit = 1 ;
0x00B3	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
;MyProject.c,17 :: 		compteur = 1;
0x00B4	0x3001      	MOVLW      1
0x00B5	0x00A4      	MOVWF      _compteur
0x00B6	0x3000      	MOVLW      0
0x00B7	0x00A5      	MOVWF      _compteur+1
;MyProject.c,18 :: 		delay_ms(500);
0x00B8	0x3003      	MOVLW      3
0x00B9	0x00FB      	MOVWF      R11
0x00BA	0x308A      	MOVLW      138
0x00BB	0x00FC      	MOVWF      R12
0x00BC	0x3055      	MOVLW      85
0x00BD	0x00FD      	MOVWF      R13
L_boutonpasparpas4:
0x00BE	0x0BFD      	DECFSZ     R13, 1
0x00BF	0x28BE      	GOTO       L_boutonpasparpas4
0x00C0	0x0BFC      	DECFSZ     R12, 1
0x00C1	0x28BE      	GOTO       L_boutonpasparpas4
0x00C2	0x0BFB      	DECFSZ     R11, 1
0x00C3	0x28BE      	GOTO       L_boutonpasparpas4
0x00C4	0x0000      	NOP
0x00C5	0x0000      	NOP
;MyProject.c,20 :: 		}
L_boutonpasparpas3:
;MyProject.c,21 :: 		}
L_end_boutonpasparpas:
0x00C6	0x0008      	RETURN
; end of _boutonpasparpas
_BoucleInfinieSpeed:
;MyProject.c,45 :: 		void BoucleInfinieSpeed(){
;MyProject.c,47 :: 		if(mode == 2) {
0x00C7	0x3000      	MOVLW      0
0x00C8	0x1283      	BCF        STATUS, 5
0x00C9	0x1303      	BCF        STATUS, 6
0x00CA	0x0623      	XORWF      _mode+1, 0
0x00CB	0x1D03      	BTFSS      STATUS, 2
0x00CC	0x28CF      	GOTO       L__BoucleInfinieSpeed47
0x00CD	0x3002      	MOVLW      2
0x00CE	0x0622      	XORWF      _mode, 0
L__BoucleInfinieSpeed47:
0x00CF	0x1D03      	BTFSS      STATUS, 2
0x00D0	0x28FD      	GOTO       L_BoucleInfinieSpeed13
;MyProject.c,48 :: 		compteur = compteur*2;
0x00D1	0x0824      	MOVF       _compteur, 0
0x00D2	0x00F1      	MOVWF      R1
0x00D3	0x0825      	MOVF       _compteur+1, 0
0x00D4	0x00F2      	MOVWF      R1+1
0x00D5	0x0DF1      	RLF        R1, 1
0x00D6	0x0DF2      	RLF        R1+1, 1
0x00D7	0x1071      	BCF        R1, 0
0x00D8	0x0871      	MOVF       R1, 0
0x00D9	0x00A4      	MOVWF      _compteur
0x00DA	0x0872      	MOVF       R1+1, 0
0x00DB	0x00A5      	MOVWF      _compteur+1
;MyProject.c,49 :: 		PORTB = compteur;
0x00DC	0x0871      	MOVF       R1, 0
0x00DD	0x0086      	MOVWF      PORTB
;MyProject.c,50 :: 		RA0_bit = 0;
0x00DE	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;MyProject.c,52 :: 		if(compteur == 256) {
0x00DF	0x0872      	MOVF       R1+1, 0
0x00E0	0x3A01      	XORLW      1
0x00E1	0x1D03      	BTFSS      STATUS, 2
0x00E2	0x28E5      	GOTO       L__BoucleInfinieSpeed48
0x00E3	0x3000      	MOVLW      0
0x00E4	0x0671      	XORWF      R1, 0
L__BoucleInfinieSpeed48:
0x00E5	0x1D03      	BTFSS      STATUS, 2
0x00E6	0x28EC      	GOTO       L_BoucleInfinieSpeed14
;MyProject.c,53 :: 		compteur =1;
0x00E7	0x3001      	MOVLW      1
0x00E8	0x00A4      	MOVWF      _compteur
0x00E9	0x3000      	MOVLW      0
0x00EA	0x00A5      	MOVWF      _compteur+1
;MyProject.c,54 :: 		RA0_bit = 1;
0x00EB	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
;MyProject.c,56 :: 		}
L_BoucleInfinieSpeed14:
;MyProject.c,57 :: 		if(compteur == 0) {
0x00EC	0x3000      	MOVLW      0
0x00ED	0x0625      	XORWF      _compteur+1, 0
0x00EE	0x1D03      	BTFSS      STATUS, 2
0x00EF	0x28F2      	GOTO       L__BoucleInfinieSpeed49
0x00F0	0x3000      	MOVLW      0
0x00F1	0x0624      	XORWF      _compteur, 0
L__BoucleInfinieSpeed49:
0x00F2	0x1D03      	BTFSS      STATUS, 2
0x00F3	0x28F9      	GOTO       L_BoucleInfinieSpeed15
;MyProject.c,58 :: 		RA0_bit = 1;
0x00F4	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
;MyProject.c,59 :: 		compteur =1;
0x00F5	0x3001      	MOVLW      1
0x00F6	0x00A4      	MOVWF      _compteur
0x00F7	0x3000      	MOVLW      0
0x00F8	0x00A5      	MOVWF      _compteur+1
;MyProject.c,61 :: 		}
L_BoucleInfinieSpeed15:
;MyProject.c,62 :: 		if (RB0_bit == 0){
0x00F9	0x1806      	BTFSC      RB0_bit, BitPos(RB0_bit+0)
0x00FA	0x28FD      	GOTO       L_BoucleInfinieSpeed16
;MyProject.c,63 :: 		mode = 0;
0x00FB	0x01A2      	CLRF       _mode
0x00FC	0x01A3      	CLRF       _mode+1
;MyProject.c,64 :: 		}
L_BoucleInfinieSpeed16:
;MyProject.c,65 :: 		}
L_BoucleInfinieSpeed13:
;MyProject.c,66 :: 		}
L_end_BoucleInfinieSpeed:
0x00FD	0x0008      	RETURN
; end of _BoucleInfinieSpeed
_Par2:
;MyProject.c,67 :: 		void Par2(){
;MyProject.c,68 :: 		if (mode==3){
0x00FE	0x3000      	MOVLW      0
0x00FF	0x1283      	BCF        STATUS, 5
0x0100	0x1303      	BCF        STATUS, 6
0x0101	0x0623      	XORWF      _mode+1, 0
0x0102	0x1D03      	BTFSS      STATUS, 2
0x0103	0x2906      	GOTO       L__Par251
0x0104	0x3003      	MOVLW      3
0x0105	0x0622      	XORWF      _mode, 0
L__Par251:
0x0106	0x1D03      	BTFSS      STATUS, 2
0x0107	0x295A      	GOTO       L_Par217
;MyProject.c,69 :: 		compteur = compteur*2;
0x0108	0x0824      	MOVF       _compteur, 0
0x0109	0x00F0      	MOVWF      R0
0x010A	0x0825      	MOVF       _compteur+1, 0
0x010B	0x00F1      	MOVWF      R0+1
0x010C	0x0DF0      	RLF        R0, 1
0x010D	0x0DF1      	RLF        R0+1, 1
0x010E	0x1070      	BCF        R0, 0
0x010F	0x0870      	MOVF       R0, 0
0x0110	0x00A4      	MOVWF      _compteur
0x0111	0x0871      	MOVF       R0+1, 0
0x0112	0x00A5      	MOVWF      _compteur+1
;MyProject.c,70 :: 		PORTB = compteur;
0x0113	0x0870      	MOVF       R0, 0
0x0114	0x0086      	MOVWF      PORTB
;MyProject.c,72 :: 		RA0_bit = 0;
0x0115	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;MyProject.c,73 :: 		delay_ms(500);
0x0116	0x3003      	MOVLW      3
0x0117	0x00FB      	MOVWF      R11
0x0118	0x308A      	MOVLW      138
0x0119	0x00FC      	MOVWF      R12
0x011A	0x3055      	MOVLW      85
0x011B	0x00FD      	MOVWF      R13
L_Par218:
0x011C	0x0BFD      	DECFSZ     R13, 1
0x011D	0x291C      	GOTO       L_Par218
0x011E	0x0BFC      	DECFSZ     R12, 1
0x011F	0x291C      	GOTO       L_Par218
0x0120	0x0BFB      	DECFSZ     R11, 1
0x0121	0x291C      	GOTO       L_Par218
0x0122	0x0000      	NOP
0x0123	0x0000      	NOP
;MyProject.c,74 :: 		if(compteur == 256) {
0x0124	0x0825      	MOVF       _compteur+1, 0
0x0125	0x3A01      	XORLW      1
0x0126	0x1D03      	BTFSS      STATUS, 2
0x0127	0x292A      	GOTO       L__Par252
0x0128	0x3000      	MOVLW      0
0x0129	0x0624      	XORWF      _compteur, 0
L__Par252:
0x012A	0x1D03      	BTFSS      STATUS, 2
0x012B	0x293F      	GOTO       L_Par219
;MyProject.c,75 :: 		compteur = 1;
0x012C	0x3001      	MOVLW      1
0x012D	0x00A4      	MOVWF      _compteur
0x012E	0x3000      	MOVLW      0
0x012F	0x00A5      	MOVWF      _compteur+1
;MyProject.c,76 :: 		RA0_bit = 1;
0x0130	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
;MyProject.c,77 :: 		delay_ms(1000);
0x0131	0x3006      	MOVLW      6
0x0132	0x00FB      	MOVWF      R11
0x0133	0x3013      	MOVLW      19
0x0134	0x00FC      	MOVWF      R12
0x0135	0x30AD      	MOVLW      173
0x0136	0x00FD      	MOVWF      R13
L_Par220:
0x0137	0x0BFD      	DECFSZ     R13, 1
0x0138	0x2937      	GOTO       L_Par220
0x0139	0x0BFC      	DECFSZ     R12, 1
0x013A	0x2937      	GOTO       L_Par220
0x013B	0x0BFB      	DECFSZ     R11, 1
0x013C	0x2937      	GOTO       L_Par220
0x013D	0x0000      	NOP
0x013E	0x0000      	NOP
;MyProject.c,78 :: 		}
L_Par219:
;MyProject.c,79 :: 		if(compteur == 0) {
0x013F	0x3000      	MOVLW      0
0x0140	0x0625      	XORWF      _compteur+1, 0
0x0141	0x1D03      	BTFSS      STATUS, 2
0x0142	0x2945      	GOTO       L__Par253
0x0143	0x3000      	MOVLW      0
0x0144	0x0624      	XORWF      _compteur, 0
L__Par253:
0x0145	0x1D03      	BTFSS      STATUS, 2
0x0146	0x295A      	GOTO       L_Par221
;MyProject.c,80 :: 		RA0_bit = 1 ;
0x0147	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
;MyProject.c,81 :: 		compteur = 1;
0x0148	0x3001      	MOVLW      1
0x0149	0x00A4      	MOVWF      _compteur
0x014A	0x3000      	MOVLW      0
0x014B	0x00A5      	MOVWF      _compteur+1
;MyProject.c,82 :: 		delay_ms(500);
0x014C	0x3003      	MOVLW      3
0x014D	0x00FB      	MOVWF      R11
0x014E	0x308A      	MOVLW      138
0x014F	0x00FC      	MOVWF      R12
0x0150	0x3055      	MOVLW      85
0x0151	0x00FD      	MOVWF      R13
L_Par222:
0x0152	0x0BFD      	DECFSZ     R13, 1
0x0153	0x2952      	GOTO       L_Par222
0x0154	0x0BFC      	DECFSZ     R12, 1
0x0155	0x2952      	GOTO       L_Par222
0x0156	0x0BFB      	DECFSZ     R11, 1
0x0157	0x2952      	GOTO       L_Par222
0x0158	0x0000      	NOP
0x0159	0x0000      	NOP
;MyProject.c,84 :: 		}
L_Par221:
;MyProject.c,85 :: 		}
L_Par217:
;MyProject.c,86 :: 		}
L_end_Par2:
0x015A	0x0008      	RETURN
; end of _Par2
_main:
;MyProject.c,88 :: 		void main() {
;MyProject.c,89 :: 		TRISA = 0b00000000;
0x015B	0x1683      	BSF        STATUS, 5
0x015C	0x1303      	BCF        STATUS, 6
0x015D	0x0185      	CLRF       TRISA
;MyProject.c,90 :: 		PORTA = 0b11001000;
0x015E	0x30C8      	MOVLW      200
0x015F	0x1283      	BCF        STATUS, 5
0x0160	0x0085      	MOVWF      PORTA
;MyProject.c,91 :: 		TRISB = 0b00000001;
0x0161	0x3001      	MOVLW      1
0x0162	0x1683      	BSF        STATUS, 5
0x0163	0x0086      	MOVWF      TRISB
;MyProject.c,92 :: 		PORTB = 0 ;
0x0164	0x1283      	BCF        STATUS, 5
0x0165	0x0186      	CLRF       PORTB
;MyProject.c,93 :: 		pcon.OSCF = 1;
0x0166	0x1683      	BSF        STATUS, 5
0x0167	0x158E      	BSF        PCON, 3
;MyProject.c,94 :: 		CMCON = 0b00000111;
0x0168	0x3007      	MOVLW      7
0x0169	0x1283      	BCF        STATUS, 5
0x016A	0x009F      	MOVWF      CMCON
;MyProject.c,95 :: 		compteur = 0;
0x016B	0x01A4      	CLRF       _compteur
0x016C	0x01A5      	CLRF       _compteur+1
;MyProject.c,96 :: 		mode = -1 ;
0x016D	0x30FF      	MOVLW      255
0x016E	0x00A2      	MOVWF      _mode
0x016F	0x30FF      	MOVLW      255
0x0170	0x00A3      	MOVWF      _mode+1
;MyProject.c,98 :: 		RA1_bit = 1;
0x0171	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
;MyProject.c,99 :: 		delay_ms(500);
0x0172	0x3003      	MOVLW      3
0x0173	0x00FB      	MOVWF      R11
0x0174	0x308A      	MOVLW      138
0x0175	0x00FC      	MOVWF      R12
0x0176	0x3055      	MOVLW      85
0x0177	0x00FD      	MOVWF      R13
L_main23:
0x0178	0x0BFD      	DECFSZ     R13, 1
0x0179	0x2978      	GOTO       L_main23
0x017A	0x0BFC      	DECFSZ     R12, 1
0x017B	0x2978      	GOTO       L_main23
0x017C	0x0BFB      	DECFSZ     R11, 1
0x017D	0x2978      	GOTO       L_main23
0x017E	0x0000      	NOP
0x017F	0x0000      	NOP
;MyProject.c,100 :: 		RA1_bit = 0;
0x0180	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
;MyProject.c,101 :: 		while(1){
L_main24:
;MyProject.c,102 :: 		if(RB0_bit == 0){
0x0181	0x1806      	BTFSC      RB0_bit, BitPos(RB0_bit+0)
0x0182	0x29C7      	GOTO       L_main26
;MyProject.c,103 :: 		mode = 0;
0x0183	0x01A2      	CLRF       _mode
0x0184	0x01A3      	CLRF       _mode+1
;MyProject.c,104 :: 		RA3_bit = 0;
0x0185	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;MyProject.c,105 :: 		RA6_bit = 1;
0x0186	0x1705      	BSF        RA6_bit, BitPos(RA6_bit+0)
;MyProject.c,106 :: 		RA7_bit = 1 ;
0x0187	0x1785      	BSF        RA7_bit, BitPos(RA7_bit+0)
;MyProject.c,107 :: 		delay_ms(800);
0x0188	0x3005      	MOVLW      5
0x0189	0x00FB      	MOVWF      R11
0x018A	0x300F      	MOVLW      15
0x018B	0x00FC      	MOVWF      R12
0x018C	0x30F1      	MOVLW      241
0x018D	0x00FD      	MOVWF      R13
L_main27:
0x018E	0x0BFD      	DECFSZ     R13, 1
0x018F	0x298E      	GOTO       L_main27
0x0190	0x0BFC      	DECFSZ     R12, 1
0x0191	0x298E      	GOTO       L_main27
0x0192	0x0BFB      	DECFSZ     R11, 1
0x0193	0x298E      	GOTO       L_main27
;MyProject.c,108 :: 		if(RB0_bit == 0){
0x0194	0x1806      	BTFSC      RB0_bit, BitPos(RB0_bit+0)
0x0195	0x29C7      	GOTO       L_main28
;MyProject.c,109 :: 		mode = 1;
0x0196	0x3001      	MOVLW      1
0x0197	0x00A2      	MOVWF      _mode
0x0198	0x3000      	MOVLW      0
0x0199	0x00A3      	MOVWF      _mode+1
;MyProject.c,110 :: 		RA3_bit = 1;
0x019A	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;MyProject.c,111 :: 		RA6_bit = 0;
0x019B	0x1305      	BCF        RA6_bit, BitPos(RA6_bit+0)
;MyProject.c,112 :: 		RA7_bit = 1 ;
0x019C	0x1785      	BSF        RA7_bit, BitPos(RA7_bit+0)
;MyProject.c,113 :: 		delay_ms(800);
0x019D	0x3005      	MOVLW      5
0x019E	0x00FB      	MOVWF      R11
0x019F	0x300F      	MOVLW      15
0x01A0	0x00FC      	MOVWF      R12
0x01A1	0x30F1      	MOVLW      241
0x01A2	0x00FD      	MOVWF      R13
L_main29:
0x01A3	0x0BFD      	DECFSZ     R13, 1
0x01A4	0x29A3      	GOTO       L_main29
0x01A5	0x0BFC      	DECFSZ     R12, 1
0x01A6	0x29A3      	GOTO       L_main29
0x01A7	0x0BFB      	DECFSZ     R11, 1
0x01A8	0x29A3      	GOTO       L_main29
;MyProject.c,114 :: 		if(RB0_bit == 0){
0x01A9	0x1806      	BTFSC      RB0_bit, BitPos(RB0_bit+0)
0x01AA	0x29C7      	GOTO       L_main30
;MyProject.c,115 :: 		mode = 2;
0x01AB	0x3002      	MOVLW      2
0x01AC	0x00A2      	MOVWF      _mode
0x01AD	0x3000      	MOVLW      0
0x01AE	0x00A3      	MOVWF      _mode+1
;MyProject.c,116 :: 		RA3_bit = 1;
0x01AF	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;MyProject.c,117 :: 		RA6_bit = 1;
0x01B0	0x1705      	BSF        RA6_bit, BitPos(RA6_bit+0)
;MyProject.c,118 :: 		RA7_bit = 0 ;
0x01B1	0x1385      	BCF        RA7_bit, BitPos(RA7_bit+0)
;MyProject.c,119 :: 		delay_ms(800);
0x01B2	0x3005      	MOVLW      5
0x01B3	0x00FB      	MOVWF      R11
0x01B4	0x300F      	MOVLW      15
0x01B5	0x00FC      	MOVWF      R12
0x01B6	0x30F1      	MOVLW      241
0x01B7	0x00FD      	MOVWF      R13
L_main31:
0x01B8	0x0BFD      	DECFSZ     R13, 1
0x01B9	0x29B8      	GOTO       L_main31
0x01BA	0x0BFC      	DECFSZ     R12, 1
0x01BB	0x29B8      	GOTO       L_main31
0x01BC	0x0BFB      	DECFSZ     R11, 1
0x01BD	0x29B8      	GOTO       L_main31
;MyProject.c,120 :: 		if(RB0_bit == 0){
0x01BE	0x1806      	BTFSC      RB0_bit, BitPos(RB0_bit+0)
0x01BF	0x29C7      	GOTO       L_main32
;MyProject.c,121 :: 		mode = 3;
0x01C0	0x3003      	MOVLW      3
0x01C1	0x00A2      	MOVWF      _mode
0x01C2	0x3000      	MOVLW      0
0x01C3	0x00A3      	MOVWF      _mode+1
;MyProject.c,122 :: 		RA3_bit = 0;
0x01C4	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;MyProject.c,123 :: 		RA6_bit = 0;
0x01C5	0x1305      	BCF        RA6_bit, BitPos(RA6_bit+0)
;MyProject.c,124 :: 		RA7_bit = 0;
0x01C6	0x1385      	BCF        RA7_bit, BitPos(RA7_bit+0)
;MyProject.c,125 :: 		}
L_main32:
;MyProject.c,126 :: 		}
L_main30:
;MyProject.c,129 :: 		}
L_main28:
;MyProject.c,130 :: 		}
L_main26:
;MyProject.c,132 :: 		switch(mode){
0x01C7	0x29D4      	GOTO       L_main33
;MyProject.c,133 :: 		case 0:
L_main35:
;MyProject.c,134 :: 		boutonpasparpas(void);
0x01C8	0x2072      	CALL       _boutonpasparpas
;MyProject.c,135 :: 		mode = -1;
0x01C9	0x30FF      	MOVLW      255
0x01CA	0x00A2      	MOVWF      _mode
0x01CB	0x30FF      	MOVLW      255
0x01CC	0x00A3      	MOVWF      _mode+1
;MyProject.c,136 :: 		break;
0x01CD	0x29F4      	GOTO       L_main34
;MyProject.c,137 :: 		case 1:
L_main36:
;MyProject.c,138 :: 		BoucleInfinie(void);
0x01CE	0x2003      	CALL       _BoucleInfinie
;MyProject.c,139 :: 		break;
0x01CF	0x29F4      	GOTO       L_main34
;MyProject.c,140 :: 		case 2:
L_main37:
;MyProject.c,141 :: 		BoucleInfinieSpeed(void);
0x01D0	0x20C7      	CALL       _BoucleInfinieSpeed
;MyProject.c,142 :: 		break;
0x01D1	0x29F4      	GOTO       L_main34
;MyProject.c,143 :: 		case 3:
L_main38:
;MyProject.c,144 :: 		Par2(void);
0x01D2	0x20FE      	CALL       _Par2
;MyProject.c,145 :: 		break;
0x01D3	0x29F4      	GOTO       L_main34
;MyProject.c,146 :: 		}
L_main33:
0x01D4	0x3000      	MOVLW      0
0x01D5	0x0623      	XORWF      _mode+1, 0
0x01D6	0x1D03      	BTFSS      STATUS, 2
0x01D7	0x29DA      	GOTO       L__main55
0x01D8	0x3000      	MOVLW      0
0x01D9	0x0622      	XORWF      _mode, 0
L__main55:
0x01DA	0x1903      	BTFSC      STATUS, 2
0x01DB	0x29C8      	GOTO       L_main35
0x01DC	0x3000      	MOVLW      0
0x01DD	0x0623      	XORWF      _mode+1, 0
0x01DE	0x1D03      	BTFSS      STATUS, 2
0x01DF	0x29E2      	GOTO       L__main56
0x01E0	0x3001      	MOVLW      1
0x01E1	0x0622      	XORWF      _mode, 0
L__main56:
0x01E2	0x1903      	BTFSC      STATUS, 2
0x01E3	0x29CE      	GOTO       L_main36
0x01E4	0x3000      	MOVLW      0
0x01E5	0x0623      	XORWF      _mode+1, 0
0x01E6	0x1D03      	BTFSS      STATUS, 2
0x01E7	0x29EA      	GOTO       L__main57
0x01E8	0x3002      	MOVLW      2
0x01E9	0x0622      	XORWF      _mode, 0
L__main57:
0x01EA	0x1903      	BTFSC      STATUS, 2
0x01EB	0x29D0      	GOTO       L_main37
0x01EC	0x3000      	MOVLW      0
0x01ED	0x0623      	XORWF      _mode+1, 0
0x01EE	0x1D03      	BTFSS      STATUS, 2
0x01EF	0x29F2      	GOTO       L__main58
0x01F0	0x3003      	MOVLW      3
0x01F1	0x0622      	XORWF      _mode, 0
L__main58:
0x01F2	0x1903      	BTFSC      STATUS, 2
0x01F3	0x29D2      	GOTO       L_main38
L_main34:
;MyProject.c,147 :: 		}
0x01F4	0x2981      	GOTO       L_main24
;MyProject.c,148 :: 		}
L_end_main:
0x01F5	0x29F5      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003     [111]    _BoucleInfinie
0x0072      [85]    _boutonpasparpas
0x00C7      [55]    _BoucleInfinieSpeed
0x00FE      [93]    _Par2
0x015B     [155]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [0]    RA3_bit
0x0005       [0]    RA6_bit
0x0005       [0]    RA7_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA0_bit
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0006       [0]    RB0_bit
0x000A       [1]    PCLATH
0x001F       [1]    CMCON
0x0020       [2]    ___DoICPAddr
0x0022       [2]    _mode
0x0024       [2]    _compteur
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x008E       [1]    PCON
